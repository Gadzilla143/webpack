/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./index.js":
/*!******************!*\
  !*** ./index.js ***!
  \******************/
/***/ (function() {

eval("// import './style.css'\r\n\r\nconst enterKeyCode = 13;\r\n\r\nconst userListBlock = document.getElementById(\"container\");\r\nconst searchBar = document.getElementById(\"searchBar\");\r\nconst userCounter = document.getElementById(\"user-counter\");\r\nconst userInformation = document.getElementById(\"user_inf\");\r\nconst userPanel = document.getElementById(\"user-panel\");\r\nconst popup = document.getElementById(\"popup-1\");\r\nconst settings = document.getElementById(\"settings\");\r\n\r\nconst userLogin = document.getElementById(\"login\");\r\nconst userPassword = document.getElementById(\"pass\");\r\nconst singIn = document.getElementById(\"singIn\");\r\n\r\nconst singUp = document.getElementById(\"singUp\");\r\nconst register = document.getElementById(\"popup-2\");\r\nconst regEmail = document.getElementById(\"regEmail\");\r\nconst regPass = document.getElementById(\"regPass\");\r\nconst regName = document.getElementById(\"regName\");\r\n\r\nlet sortState = \"name\";\r\nlet searchString = \"\";\r\nlet viewState = \"grid\";\r\nlet userList = [];\r\nlet userListUnFiltered = \"\";\r\n\r\nsingUp.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  setUsers();\r\n});\r\n\r\nsingIn.addEventListener(\"submit\", (e) => {\r\n  e.preventDefault();\r\n  login();\r\n});\r\n\r\nsearchBar.addEventListener(\"keyup\", (e) => {\r\n  if (e.keyCode === enterKeyCode) {\r\n    getUsers();\r\n  }\r\n  searchString = e.target.value.toLowerCase();\r\n});\r\n\r\nconst setUsers = () => {\r\n  const url = new URL(\"http://127.0.0.1:3000/user_reg\");\r\n  url.searchParams.set(\"email\", regEmail.value);\r\n  url.searchParams.set(\"password\", regPass.value);\r\n  url.searchParams.set(\"name\", regName.value);\r\n  const request = new XMLHttpRequest();\r\n  request.open(\"GET\", url, true);\r\n  request.setRequestHeader(\r\n    \"Content-Type\",\r\n    \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n  );\r\n  request.onreadystatechange = function () {\r\n    if (this.readyState === 4) {\r\n      if (this.status >= 200 && this.status < 400) {\r\n        displayUsers(JSON.parse(this.responseText));\r\n        displayUserPanel(JSON.parse(this.responseText));\r\n        userListUnFiltered = JSON.parse(this.responseText);\r\n      } else {\r\n        alert(this.status + \": \" + this.statusText);\r\n      }\r\n    }\r\n  };\r\n  request.send(this.responseText);\r\n  toggleRegister();\r\n};\r\n\r\n// Запрашиваем массив пользователей с параметрами сортировки и фильтрации\r\nconst getUsers = () => {\r\n  const url = new URL(\"http://127.0.0.1:3000/user_list\");\r\n  url.searchParams.set(\"filterBy\", searchString);\r\n  url.searchParams.set(\"sortBy\", sortState);\r\n  const request = new XMLHttpRequest();\r\n  request.open(\"GET\", url, true);\r\n  request.setRequestHeader(\r\n    \"Content-Type\",\r\n    \"application/x-www-form-urlencoded; charset=UTF-8\"\r\n  );\r\n  request.onreadystatechange = function () {\r\n    if (this.readyState === 4) {\r\n      if (this.status >= 200 && this.status < 400) {\r\n        displayUsers(JSON.parse(this.responseText));\r\n        displayUserPanel(JSON.parse(this.responseText));\r\n      } else {\r\n        alert(this.status + \": \" + this.statusText);\r\n      }\r\n    }\r\n  };\r\n  request.send(this.responseText);\r\n};\r\n\r\nconst login = () => {\r\n  if (userList.find((user) => user.email === userLogin.value)) {\r\n    const userId = userList.findIndex((user) => user.email === userLogin.value);\r\n    \r\n    if (userList[userId].password == userPassword.value) {\r\n      localStorage.setItem(\"userId\", userList[userId].id);\r\n      localStorage.setItem(\"userRole\", userList[userId].role);\r\n      togglePopup();\r\n      displayUsers(userList);\r\n      displayUserPanel(userList);\r\n    } else {\r\n      alert(\"Error: password\");\r\n    }\r\n  } else {\r\n    alert(\"Error: no person with this email\");\r\n  }\r\n};\r\n// Запоминаем id выбранного пользователя\r\nconst pickUser = (id) => {\r\n  \r\n  localStorage.setItem(\"userPageId\", id);\r\n};\r\n\r\nconst sortByName = () => {\r\n  sortState = \"name\";\r\n  getUsers();\r\n};\r\n\r\nconst sortByNativeName = () => {\r\n  sortState = \"nativeName\";\r\n  getUsers();\r\n};\r\n\r\nconst gridView = () => {\r\n  viewState = \"grid\";\r\n  displayUsers(userList);\r\n};\r\n\r\nconst listView = () => {\r\n  viewState = \"list\";\r\n  displayUsers(userList);\r\n};\r\n\r\nconst exit = () => {\r\n  localStorage.setItem(\"userId\", \"\");\r\n  localStorage.setItem(\"userRole\", \"Employee\");\r\n  displayUserPanel(userList);\r\n};\r\n\r\nconst togglePopup = () => {\r\n  popup.classList.toggle(\"active\");\r\n};\r\n\r\nconst toggleRegister = () => {\r\n  \r\n  register.classList.toggle(\"active\");\r\n};\r\n\r\nconst displayUserPanel = (data) => {\r\n  if (localStorage.getItem(\"userRole\") === \"Employee\") {\r\n    settings.classList.add(\"hide\");\r\n  } else {\r\n    settings.classList.remove(\"hide\");\r\n  }\r\n  if (!userListUnFiltered) {\r\n    userListUnFiltered = data;\r\n  }\r\n  const id = localStorage.getItem(\"userId\");\r\n  const user = userListUnFiltered.find(\r\n    (user) => user.id == localStorage.getItem(\"userId\")\r\n  );\r\n  userPanel.innerHTML = id\r\n    ? `\r\n  <div class=\"header__item\">\r\n    <img src='./assets/near.svg' alt=\"near\" />\r\n  </div>\r\n  <a class=\"header__user\" onclick=\"pickUser(${user.id})\" href=\"./userPage/user.html\">\r\n    <img src='${user.avatar}' alt=\"user\" />\r\n    <h2>${user.name}</h2>\r\n  </a>\r\n  <div class=\"header__item\">\r\n    <img onclick='exit()' src='./assets/exit.svg' alt=\"exit\" />\r\n  </div>\r\n  `\r\n    : `\r\n  <div onclick=\"toggleRegister()\" class=\"header__sign btn\">\r\n    Sing Up\r\n  </div>\r\n  <div onclick=\"togglePopup()\" class=\"header__sign btn\">\r\n    Sing In\r\n  </div\r\n  `;\r\n};\r\n\r\nconst displayUsers = (data) => {\r\n  userList = data;\r\n  let newUserList = data.reduce((str, el) => {\r\n    return (\r\n      str +\r\n      `\r\n          <a href=\"./userPage/user.html\" onclick=\"pickUser(${el.id})\" class=\"users__card-${viewState}\">\r\n            <div class=\"users__personal-info-${viewState}\">\r\n                <img src=\"${el.avatar}\" alt=\"aleh\">\r\n                <h2>${el.name}</h2>\r\n                <p>${el.nativeName}</p>\r\n            </div>\r\n            <div class=\"users__work-info-${viewState}\">\r\n                <div class=\"users__department\">\r\n                    <img src=\"./assets/case.svg\" alt=\"aleh\">\r\n                    ${el.department}\r\n                </div>\r\n                <div class=\"users__room\">\r\n                    <img src=\"./assets/door.svg\" alt=\"aleh\">\r\n                    ${el.room}\r\n                </div>\r\n            </div>\r\n          </a>\r\n        `\r\n    );\r\n  }, \"\");\r\n\r\n  userListBlock.innerHTML = newUserList;\r\n  userCounter.innerHTML = `${data.length} employers displayed`;\r\n};\r\n\r\ngetUsers();\r\n\n\n//# sourceURL=webpack://kirkouski.yahor/./index.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./index.js"]();
/******/ 	
/******/ })()
;